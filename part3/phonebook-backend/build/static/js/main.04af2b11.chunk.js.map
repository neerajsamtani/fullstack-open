{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","onSubmit","event","preventDefault","Persons","personsToShow","confirmDelete","map","person","key","name","number","onClick","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","type","url","axios","get","then","response","data","newPerson","post","id","put","delete","Notification","className","status","message","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","notification","setNotification","useEffect","phonebookService","initialData","target","length","window","confirm","oldPersonId","find","p","setTimeout","catch","returnedPerson","concat","toLowerCase","indexOf","showPerson","personFromList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04af2b11.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <form onSubmit={event => event.preventDefault()}>\r\n    <div>\r\n      filter shown with <input value={value} onChange={onChange} />\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({ personsToShow, confirmDelete }) => {\r\n  return (\r\n    <div>\r\n      {personsToShow().map(person => <p key={person.name} >{person.name} {person.number}\r\n        <button onClick={() => confirmDelete(person)}>delete</button>\r\n      </p>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => (\r\n    <form onSubmit={addName}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  export default PersonForm","import axios from 'axios'\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => (\r\n    axios\r\n        .get(url)\r\n        .then(response => response.data)\r\n)\r\n\r\nconst create = newPerson => (\r\n    axios\r\n        .post(url, newPerson)\r\n        .then(response => response.data)\r\n)\r\n\r\nconst update = (person, id) => (\r\n    axios\r\n        .put(`${url}/${id}`, person)\r\n)\r\n\r\nconst deletePerson = (person) => (\r\n    axios\r\n        .delete(`${url}/${person.id}`)\r\n)\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ data }) => {\r\n    if (data === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={data.status}>\r\n            {data.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport phonebookService from './services/phonebook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(initialData => setPersons(initialData))\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const alreadyInPhonebook = (name) => {\n    const samePerson = persons.filter(person => person.name === name)\n    return samePerson.length > 0\n  }\n\n  const showPerson = (person) => {\n    return (person.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n  }\n\n  const personsToShow = () => {\n    return persons.filter(person => showPerson(person))\n  }\n\n  const confirmDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      phonebookService\n        .deletePerson(person)\n        .then(() => setPersons(persons.filter(personFromList => personFromList !== person)))\n    }\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (alreadyInPhonebook(newPerson.name)) {\n      if (window.confirm(`${newPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const oldPersonId = persons.find(p => p.name === newPerson.name).id\n        newPerson['id'] = oldPersonId\n        phonebookService\n          .update(newPerson, oldPersonId)\n          .then(() => {\n            setPersons(persons.map(person => person.name !== newPerson.name ? person : newPerson))\n            setNotification({\n              message: `Updated ${newPerson.name}'s Number`,\n              status: 'success'\n            })\n            setTimeout(() => setNotification(null), 3000)\n          })\n          .catch(() => {\n            setPersons(persons.filter(person => person.name !== newPerson.name))\n            setNotification({\n              message: `Information of ${newPerson.name} has already been removed from the server`,\n              status: 'error'\n            })\n            setTimeout(() => setNotification(null), 3000)\n          })\n      }\n    }\n    else {\n      phonebookService\n        .create(newPerson)\n        .then(returnedPerson => setPersons(persons.concat(returnedPerson)))\n      setNotification({\n        message: `Added ${newPerson.name}`,\n        status: 'success'\n      })\n      setTimeout(() => setNotification(null), 3000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification data={notification} />\n      <Filter value={filter} onChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} confirmDelete={confirmDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}